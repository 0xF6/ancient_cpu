name: publish release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with: 
        submodules: 'recursive'
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.100-preview.3.20216.6
    - name: Install dependencies
      run: dotnet restore

    #  publish for all support RID
    - run: dotnet publish ./acc/acc.csproj -o out/acc/osx.10.14-x64 -c release -r osx.10.14-x64
    - run: dotnet publish ./vm/csharp/vm.csproj -o out/vm/osx.10.14-x64 -c release -r osx.10.14-x64
    - run: dotnet publish ./acc/acc.csproj -o out/acc/linux-x64 -c release -r linux-x64
    - run: dotnet publish ./acc/acc.csproj -o out/acc/linux-arm -c release -r linux-arm
    - run: dotnet publish ./vm/csharp/vm.csproj -o out/vm/linux-x64 -c release -r linux-x64
    - run: dotnet publish ./vm/csharp/vm.csproj -o out/vm/linux-arm -c release -r linux-arm
    - run: dotnet publish ./acc/acc.csproj -o out/acc/win10-x64 -c release -r win10-x64
    - run: dotnet publish ./acc/acc.csproj -o out/acc/win10-arm64 -c release -r win10-arm64
    - run: dotnet publish ./acc/acc.csproj -o out/acc/win10-arm -c release -r win10-arm
    - run: dotnet publish ./vm/csharp/vm.csproj -o out/vm/win10-x64 -c release -r win10-x64
    - run: dotnet publish ./vm/csharp/vm.csproj -o out/vm/win10-arm64 -c release -r win10-arm64
    - run: dotnet publish ./vm/csharp/vm.csproj -o out/vm/win10-arm -c release -r win10-arm
    # end 

    # pack VM
    - run: zip vm-osx.10.14-x64.zip . -r -9
      working-directory: ./out/vm/osx.10.14-x64
    - run: zip vm-linux-x64.zip . -r -9
      working-directory: ./out/vm/linux-x64
    - run: zip vm-linux-arm.zip . -r -9
      working-directory: ./out/vm/linux-arm
    - run: zip vm-win10-x64.zip . -r -9
      working-directory: ./out/vm/win10-x64
    - run: zip vm-win10-arm64.zip . -r -9
      working-directory: ./out/vm/win10-arm64
    - run: zip vm-win10-arm.zip . -r -9
      working-directory: ./out/vm/win10-arm
    # pack acc
    - run: zip acc-osx.10.14-x64.zip . -r -9
      working-directory: ./out/acc/osx.10.14-x64
    - run: zip acc-linux-x64.zip . -r -9
      working-directory: ./out/acc/linux-x64
    - run: zip acc-linux-arm.zip . -r -9
      working-directory: ./out/acc/linux-arm
    - run: zip acc-win10-x64.zip . -r -9
      working-directory: ./out/acc/win10-x64
    - run: zip acc-win10-arm64.zip . -r -9
      working-directory: ./out/acc/win10-arm64
    - run: zip acc-win10-arm.zip . -r -9
      working-directory: ./out/acc/win10-arm

    - run: find ./out/**/* -name "*.zip" -exec mv "{}" ./ \;


    - name: Create Release
      id: create_release_linux
      uses: ncipollo/release-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        artifacts: "./**/*.zip"
        allowUpdates: true 
        commit: master 
        token: ${{ secrets.GITHUB_TOKEN }}
        tag_name: ${{ github.ref }}
        release_name: rune-cli release
        draft: false
        prerelease: true
