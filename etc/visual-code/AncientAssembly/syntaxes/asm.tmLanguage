<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>asm</string>
		<string>anc</string>
	</array>
	<key>name</key>
	<string>Ancient Assembly</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#constants</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#control</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#ancientasm</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#quotes</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#operators</string>
		</dict>	
		<dict>
			<key>include</key>
			<string>#labels</string>
		</dict>	
        <dict>
			<key>include</key>
			<string>#support</string>
		</dict>			
	</array>
	<key>repository</key>
	<dict>
		<key>control</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)((^|\s+)\~label|.warm|init|.prune|.halt|\s+ert)\b</string>
					<key>name</key>
					<string>keyword.control.error</string>
				</dict>
			</array>
		</dict>
		<key>ancientasm</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)(\s+|((^|\s+|(?<=\())))(@float_t|\$|\#\(|\(|\)|@char_t|@string_to)(?=\.[bzwaqlt]|\s+|[:$#(\\])</string>
					<key>name</key>
					<string>keyword</string>
				</dict>	
				<dict>
					<key>match</key>
					<string>(?i)(\s+|((^|\s+|(?<=\())))(\#\{|\})(?=\.[bzwaqlt]|\s+|[:$#(\\])</string>
					<key>name</key>
					<string>storage.modifier</string>
				</dict>					
                <dict>
					<key>match</key>
					<string>\!\[\~\w+\]</string>
					<key>name</key>
					<string>constant.regexp</string>
				</dict>				
				<dict>
					<key>match</key>
					<string>(?i)(\s+|((^|\s+|(?<=\())))(true|false|pi|p%)(?=\.[bzwaqlt]|\s+|[:$#(\\])</string>
					<key>name</key>
					<string>constant.regexp</string>
				</dict>							
			</array>
		</dict>
		<key>labels</key>
		<dict>
			<key>patterns</key>
			<array>
                <!-- instruction -->
				<dict>
					<key>match</key>
					<string>(?i)\.[a-zA-Z_\.]+\b</string>
					<key>name</key>
					<string>entity.other.attribute-name.struct</string>
				</dict>
			</array>
		</dict>		
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
                <!-- multi line comment -->
				<dict>
					<key>begin</key>
					<string>\{\|</string>
					<key>end</key>
					<string>\|\}</string>
					<key>name</key>
					<string>comment.block</string>
				</dict>
				<dict>
					<key>match</key>
					<string>;.*</string>
					<key>name</key>
					<string>comment.line.semicolon</string>
				</dict>
			</array>
		</dict>
		<key>quotes</key>
		<dict>
            <!-- string and chars -->
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>'</string>
					<key>end</key>
					<string>'</string>
					<key>name</key>
					<string>string.quoted.single</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
				</dict>
                <dict>
					<key>begin</key>
					<string>%</string>
					<key>end</key>
					<string>%</string>
					<key>name</key>
					<string>string.quoted.double</string>
				</dict>
			</array>
		</dict>
		<key>constants</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)(?<=,)\s*[xy]\b(?!.*\.reg)</string>
					<key>name</key>
					<string>constant.language.registers</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b[0-9]+\b</string>
					<key>name</key>
					<string>constant.numeric.decimal</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\$\b\h+\b|\&\b\h+\b|\b0x\h+\b</string>
					<key>name</key>
					<string>constant.numeric.hexadecimal</string>
				</dict>
				<dict>
					<key>match</key>
					<string>%\b[0-1]+\b</string>
					<key>name</key>
					<string>constant.numeric.binary</string>
				</dict>
			</array>
		</dict>
		<key>operators</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)[+\-*/%!|^=~\:&amp;&lt;&gt;]|equ|\.(and|not|(lo|hi)(?=\s*\())</string>
					<key>name</key>
					<string>keyword.operators</string>
				</dict>
			</array>
		</dict>
        <key>support</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>([uif]((2|8|16|32|64|128)))\b</string>
					<key>name</key>
					<string>support.type.asm</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(\.?(alignb?|bits|cpu|fpu)|use(16|32|64))\b</string>
					<key>name</key>
					<string>support.directive.asm</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(strict|nosplit|near|far|abs|rel|seg|wrt|absolute|common)\b</string>
					<key>name</key>
					<string>support.modifier.asm</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b([ao](16|32|64))\b</string>
					<key>name</key>
					<string>support.prefix.asm</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b__(u((8|16|32|64)([lb]e)?)|str|f(8|16|32|64|80[me]|128[lh])|Infinity|[QS]?NaN)__\b</string>
					<key>name</key>
					<string>support.function.asm</string>
				</dict>
                <dict>
					<key>match</key>
					<string>\b%?(sys|external|module)\b</string>
					<key>name</key>
					<string>invalid.deprecated</string>
				</dict>
			</array>
		</dict>
		
	</dict>
	<key>scopeName</key>
	<string>source.asm.ancient</string>
	<key>uuid</key>
	<string>EFAA4088-12AA-40EA-B51F-DD5211BE9B46</string>
</dict>
</plist>
