.warm

; load values
.loadi &(0x1) <| $(0x1)
.loadi &(0x2) <| $(0x2)
.loadi &(0x3) <| $(0x5)


; print info

.push_j &(0x1) &(0x6) <| @string_t("Vector values:")
.push_a &(0x1) &(0x6) <| $(0x0A)

.push_j &(0x1) &(0x6) <| @string_t("x: ")
.push_x &(0x1) &(0x6) |> &(0x1)
.push_a &(0x1) &(0x6) <| $(0x0A)

.push_j &(0x1) &(0x6) <| @string_t("y: ")
.push_x &(0x1) &(0x6) |> &(0x2)
.push_a &(0x1) &(0x6) <| $(0x0A)

.push_j &(0x1) &(0x6) <| @string_t("z: ")
.push_x &(0x1) &(0x6) |> &(0x3)
.push_a &(0x1) &(0x6) <| $(0x0A)


; normalize vector
.add &(0x4) &(0x1) &(0x2)
.swap &(0x4) &(0x2)
.add &(0x4) &(0x2) &(0x3)
.swap &(0x4) &(0x5)
.sqrt &(0x4) &(0x5)

; result
.push_j &(0x1) &(0x6) <| @string_t("Normalize value: ")
.push_x &(0x1) &(0x6) |> &(0x4)
.push_a &(0x1) &(0x6) <| $(0x20)
; stage
.push_a &(0x1) &(0x7) <| $(0x0)
; clear
.push_a &(0x1) &(0x3) <| $(0x0)
; shutdown
.halt